# This file was originally auto-generated by O2 with contents hashing to ebc3ccafa8ac3a1ab7f215dd7d12e03e
use strict;

use Test::More qw(no_plan);
use O2::Script::Test::Common;

use_ok 'O2Plugin::Shop::Mgr::PeriodProduct::Calendar::DependencyManager';

use O2 qw($context $config);

my @localeCodes = @{ $config->get('o2.locales') };
my $mgr = $context->getSingleton('O2Plugin::Shop::Mgr::PeriodProduct::Calendar::DependencyManager');

my $newObj = $mgr->newObject(
  fromDate => $context->getDateFormatter()->dateFormat(time, 'yyyy-MM-dd HH:mm:ss'),
  toDate   => $context->getDateFormatter()->dateFormat(time, 'yyyy-MM-dd HH:mm:ss'),
);
$newObj->setMetaName('Test-script for O2Plugin::Shop::Obj::PeriodProduct::Calendar::Dependency/O2Plugin::Shop::Mgr::PeriodProduct::Calendar::DependencyManager');
$newObj->setMetaStatus("Test-varchar");
$newObj->setMetaParentId( getTestObjectId() );
$newObj->setKeywordIds( getTestObjectId(), getTestObjectId() );
$newObj->setMetaOwnerId( getTestObjectId() );
$newObj->setMetaName("Test-varchar");
$newObj->setNumSeconds(1);
$newObj->setCalendarId( getTestObjectId() );
$newObj->save();

ok($newObj->getId() > 0, 'Object saved ok');

my $dbObj = $context->getObjectById( $newObj->getId() );
ok($dbObj, 'getObjectById returned something') or BAIL_OUT("Couldn't get object from database");

is( $dbObj->getMetaClassName(), $newObj->getMetaClassName(), 'metaClassName retrieved ok.' );
is( $dbObj->getMetaStatus(), $newObj->getMetaStatus(), 'metaStatus retrieved ok.' );
is( $dbObj->getMetaChangeTime(), $newObj->getMetaChangeTime(), 'metaChangeTime retrieved ok.' );
is( $dbObj->getMetaParentId(), $newObj->getMetaParentId(), 'metaParentId retrieved ok.' );
is_deeply( [ $dbObj->getKeywordIds() ], [ $newObj->getKeywordIds() ], 'keywordIds retrieved ok.' );
is( $dbObj->getMetaCreateTime(), $newObj->getMetaCreateTime(), 'metaCreateTime retrieved ok.' );
is( $dbObj->getMetaOwnerId(), $newObj->getMetaOwnerId(), 'metaOwnerId retrieved ok.' );
is( $dbObj->getMetaName(), $newObj->getMetaName(), 'metaName retrieved ok.' );
is( $dbObj->getId(), $newObj->getId(), 'id retrieved ok.' );
is( $dbObj->getNumSeconds(), $newObj->getNumSeconds(), 'numSeconds retrieved ok.' );
is( $dbObj->getFromDate()->format('yyyy-MM-dd HH:mm:ss'), $newObj->getFromDate()->format('yyyy-MM-dd HH:mm:ss'), 'fromDate retrieved ok.' );
is( $dbObj->getToDate()->format('yyyy-MM-dd HH:mm:ss'), $newObj->getToDate()->format('yyyy-MM-dd HH:mm:ss'), 'toDate retrieved ok.' );
is( $dbObj->getCalendarId(), $newObj->getCalendarId(), 'calendarId retrieved ok.' );

# See if a simple object search works
my @searchResults = $mgr->objectSearch( objectId => $newObj->getId() );
is($searchResults[0]->getId(), $newObj->getId(), 'Search for objectId ok');

END {
  $newObj->deletePermanently() if $newObj;
  deleteTestObjects();
}
