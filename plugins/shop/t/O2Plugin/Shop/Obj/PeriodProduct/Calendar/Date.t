# This file was originally auto-generated by O2 with contents hashing to 0225853e8a268ff2c19d08af5c4257cc
use strict;

use Test::More qw(no_plan);
use O2::Script::Test::Common;

use_ok 'O2Plugin::Shop::Mgr::PeriodProduct::Calendar::DateManager';

use O2 qw($context $config);

my @localeCodes = @{ $config->get('o2.locales') };
my $mgr = $context->getSingleton('O2Plugin::Shop::Mgr::PeriodProduct::Calendar::DateManager');

my $newObj = $mgr->newObject();
$newObj->setMetaName('Test-script for O2Plugin::Shop::Obj::PeriodProduct::Calendar::Date/O2Plugin::Shop::Mgr::PeriodProduct::Calendar::DateManager');
$newObj->setMetaStatus("Test-varchar");
$newObj->setMetaParentId( getTestObjectId() );
$newObj->setKeywordIds( getTestObjectId(), getTestObjectId() );
$newObj->setMetaOwnerId( getTestObjectId() );
$newObj->setMetaName("Test-varchar");
$newObj->setMonth(1);
$newObj->setSeconds(1);
$newObj->setHours(1);
$newObj->setDayOfMonth(1);
$newObj->setMinutes(1);
$newObj->setNanoSeconds(1);
$newObj->setYear(1);
$newObj->setAvailability(1);
$newObj->setCalendarId( getTestObjectId() );
$newObj->setAttributes("one", "two");
$newObj->setOrderLineIds( getTestObjectId(), getTestObjectId() );
$newObj->save();

ok($newObj->getId() > 0, 'Object saved ok');

my $dbObj = $context->getObjectById( $newObj->getId() );
ok($dbObj, 'getObjectById returned something') or BAIL_OUT("Couldn't get object from database");

is( $dbObj->getMetaClassName(), $newObj->getMetaClassName(), 'metaClassName retrieved ok.' );
is( $dbObj->getMetaStatus(), $newObj->getMetaStatus(), 'metaStatus retrieved ok.' );
is( $dbObj->getMetaParentId(), $newObj->getMetaParentId(), 'metaParentId retrieved ok.' );
is_deeply( [ $dbObj->getKeywordIds() ], [ $newObj->getKeywordIds() ], 'keywordIds retrieved ok.' );
is( $dbObj->getMetaCreateTime(), $newObj->getMetaCreateTime(), 'metaCreateTime retrieved ok.' );
is( $dbObj->getId(), $newObj->getId(), 'id retrieved ok.' );
is( $dbObj->getMetaChangeTime(), $newObj->getMetaChangeTime(), 'metaChangeTime retrieved ok.' );
is( $dbObj->getMetaOwnerId(), $newObj->getMetaOwnerId(), 'metaOwnerId retrieved ok.' );
is( $dbObj->getMetaName(), $newObj->getMetaName(), 'metaName retrieved ok.' );
is( $dbObj->getMonth(), $newObj->getMonth(), 'month retrieved ok.' );
is( $dbObj->getSeconds(), $newObj->getSeconds(), 'seconds retrieved ok.' );
is( $dbObj->getHours(), $newObj->getHours(), 'hours retrieved ok.' );
is( $dbObj->getDayOfMonth(), $newObj->getDayOfMonth(), 'dayOfMonth retrieved ok.' );
is( $dbObj->getMinutes(), $newObj->getMinutes(), 'minutes retrieved ok.' );
is( $dbObj->getNanoSeconds(), $newObj->getNanoSeconds(), 'nanoSeconds retrieved ok.' );
is( $dbObj->getYear(), $newObj->getYear(), 'year retrieved ok.' );
is( $dbObj->getAvailability(), $newObj->getAvailability(), 'availability retrieved ok.' );
is( $dbObj->getCalendarId(), $newObj->getCalendarId(), 'calendarId retrieved ok.' );
is_deeply( [ $dbObj->getAttributes() ], [ $newObj->getAttributes() ], 'attributes retrieved ok.' );
is_deeply( [ $dbObj->getOrderLineIds() ], [ $newObj->getOrderLineIds() ], 'orderLineIds retrieved ok.' );

# See if a simple object search works
my @searchResults = $mgr->objectSearch( objectId => $newObj->getId() );
is($searchResults[0]->getId(), $newObj->getId(), 'Search for objectId ok');

END {
  $newObj->deletePermanently() if $newObj;
  deleteTestObjects();
}
